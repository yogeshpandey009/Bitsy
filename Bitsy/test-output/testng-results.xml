<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="21" passed="21">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="3437" started-at="2016-04-05T17:18:30Z" finished-at="2016-04-05T17:18:34Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="3437" started-at="2016-04-05T17:18:30Z" finished-at="2016-04-05T17:18:34Z">
      <class name="main.java.compiler.test.CompilerTest">
        <test-method status="PASS" signature="createTempDir()[pri:0, instance:main.java.compiler.test.CompilerTest@1810399e]" name="createTempDir" is-config="true" duration-ms="40" started-at="2016-04-05T10:18:30Z" finished-at="2016-04-05T10:18:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createTempDir -->
        <test-method status="PASS" signature="compilingCode_throwsUndeclaredVariableException_ifReadingUndefinedVariable()[pri:0, instance:main.java.compiler.test.CompilerTest@1810399e]" name="compilingCode_throwsUndeclaredVariableException_ifReadingUndefinedVariable" duration-ms="119" started-at="2016-04-05T10:18:30Z" finished-at="2016-04-05T10:18:30Z">
          <exception class="main.java.compiler.exceptions.UndeclaredVariableException">
            <message>
              <![CDATA[1:8 undeclared variable <x>]]>
            </message>
            <full-stacktrace>
              <![CDATA[main.java.compiler.exceptions.UndeclaredVariableException: 1:8 undeclared variable <x>
	at main.java.compiler.MyVisitor.requireVariableIndex(MyVisitor.java:156)
	at main.java.compiler.MyVisitor.visitVariable(MyVisitor.java:84)
	at main.java.compiler.MyVisitor.visitVariable(MyVisitor.java:1)
	at mycompiler.parser.MyLangParser$VariableContext.accept(MyLangParser.java:319)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:44)
	at main.java.compiler.MyVisitor.visitPrintln(MyVisitor.java:34)
	at main.java.compiler.MyVisitor.visitPrintln(MyVisitor.java:1)
	at mycompiler.parser.MyLangParser$PrintlnContext.accept(MyLangParser.java:666)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visitChildren(AbstractParseTreeVisitor.java:72)
	at mycompiler.parser.MyLangBaseVisitor.visitStatement(MyLangBaseVisitor.java:133)
	at mycompiler.parser.MyLangParser$StatementContext.accept(MyLangParser.java:226)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visitChildren(AbstractParseTreeVisitor.java:72)
	at mycompiler.parser.MyLangBaseVisitor.visitMainStatement(MyLangBaseVisitor.java:53)
	at mycompiler.parser.MyLangParser$MainStatementContext.accept(MyLangParser.java:143)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:44)
	at main.java.compiler.MyVisitor.visitProgram(MyVisitor.java:135)
	at main.java.compiler.MyVisitor.visitProgram(MyVisitor.java:1)
	at mycompiler.parser.MyLangParser$ProgramContext.accept(MyLangParser.java:79)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:44)
	at main.java.compiler.Main.compile(Main.java:27)
	at main.java.compiler.test.CompilerTest.compileAndRun(CompilerTest.java:138)
	at main.java.compiler.test.CompilerTest.compilingCode_throwsUndeclaredVariableException_ifReadingUndefinedVariable(CompilerTest.java:64)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- main.java.compiler.exceptions.UndeclaredVariableException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- compilingCode_throwsUndeclaredVariableException_ifReadingUndefinedVariable -->
        <test-method status="PASS" signature="createTempDir()[pri:0, instance:main.java.compiler.test.CompilerTest@1810399e]" name="createTempDir" is-config="true" duration-ms="1" started-at="2016-04-05T10:18:30Z" finished-at="2016-04-05T10:18:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createTempDir -->
        <test-method status="PASS" signature="compilingCode_throwsUndeclaredVariableException_ifWritingUndefinedVariable()[pri:0, instance:main.java.compiler.test.CompilerTest@1810399e]" name="compilingCode_throwsUndeclaredVariableException_ifWritingUndefinedVariable" duration-ms="9" started-at="2016-04-05T10:18:30Z" finished-at="2016-04-05T10:18:30Z">
          <exception class="main.java.compiler.exceptions.UndeclaredVariableException">
            <message>
              <![CDATA[1:0 undeclared variable <x>]]>
            </message>
            <full-stacktrace>
              <![CDATA[main.java.compiler.exceptions.UndeclaredVariableException: 1:0 undeclared variable <x>
	at main.java.compiler.MyVisitor.requireVariableIndex(MyVisitor.java:156)
	at main.java.compiler.MyVisitor.visitAssignment(MyVisitor.java:79)
	at main.java.compiler.MyVisitor.visitAssignment(MyVisitor.java:1)
	at mycompiler.parser.MyLangParser$AssignmentContext.accept(MyLangParser.java:620)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visitChildren(AbstractParseTreeVisitor.java:72)
	at mycompiler.parser.MyLangBaseVisitor.visitStatement(MyLangBaseVisitor.java:133)
	at mycompiler.parser.MyLangParser$StatementContext.accept(MyLangParser.java:226)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visitChildren(AbstractParseTreeVisitor.java:72)
	at mycompiler.parser.MyLangBaseVisitor.visitMainStatement(MyLangBaseVisitor.java:53)
	at mycompiler.parser.MyLangParser$MainStatementContext.accept(MyLangParser.java:143)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:44)
	at main.java.compiler.MyVisitor.visitProgram(MyVisitor.java:135)
	at main.java.compiler.MyVisitor.visitProgram(MyVisitor.java:1)
	at mycompiler.parser.MyLangParser$ProgramContext.accept(MyLangParser.java:79)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:44)
	at main.java.compiler.Main.compile(Main.java:27)
	at main.java.compiler.test.CompilerTest.compileAndRun(CompilerTest.java:138)
	at main.java.compiler.test.CompilerTest.compilingCode_throwsUndeclaredVariableException_ifWritingUndefinedVariable(CompilerTest.java:73)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- main.java.compiler.exceptions.UndeclaredVariableException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- compilingCode_throwsUndeclaredVariableException_ifWritingUndefinedVariable -->
        <test-method status="PASS" signature="compilingCode_throwsVariableAlreadyDefinedException_whenDefiningAlreadyDefinedVariable()[pri:0, instance:main.java.compiler.test.CompilerTest@1810399e]" name="compilingCode_throwsVariableAlreadyDefinedException_whenDefiningAlreadyDefinedVariable" duration-ms="8" started-at="2016-04-05T10:18:30Z" finished-at="2016-04-05T10:18:30Z">
          <exception class="main.java.compiler.exceptions.VariableAlreadyDefinedException">
            <message>
              <![CDATA[2:4 variable already defined: <x>]]>
            </message>
            <full-stacktrace>
              <![CDATA[main.java.compiler.exceptions.VariableAlreadyDefinedException: 2:4 variable already defined: <x>
	at main.java.compiler.MyVisitor.visitVarDeclaration(MyVisitor.java:70)
	at main.java.compiler.MyVisitor.visitVarDeclaration(MyVisitor.java:1)
	at mycompiler.parser.MyLangParser$VarDeclarationContext.accept(MyLangParser.java:573)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visitChildren(AbstractParseTreeVisitor.java:72)
	at mycompiler.parser.MyLangBaseVisitor.visitStatement(MyLangBaseVisitor.java:133)
	at mycompiler.parser.MyLangParser$StatementContext.accept(MyLangParser.java:226)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visitChildren(AbstractParseTreeVisitor.java:72)
	at mycompiler.parser.MyLangBaseVisitor.visitMainStatement(MyLangBaseVisitor.java:53)
	at mycompiler.parser.MyLangParser$MainStatementContext.accept(MyLangParser.java:143)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:44)
	at main.java.compiler.MyVisitor.visitProgram(MyVisitor.java:135)
	at main.java.compiler.MyVisitor.visitProgram(MyVisitor.java:1)
	at mycompiler.parser.MyLangParser$ProgramContext.accept(MyLangParser.java:79)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:44)
	at main.java.compiler.Main.compile(Main.java:27)
	at main.java.compiler.test.CompilerTest.compileAndRun(CompilerTest.java:138)
	at main.java.compiler.test.CompilerTest.compilingCode_throwsVariableAlreadyDefinedException_whenDefiningAlreadyDefinedVariable(CompilerTest.java:82)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- main.java.compiler.exceptions.VariableAlreadyDefinedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- compilingCode_throwsVariableAlreadyDefinedException_whenDefiningAlreadyDefinedVariable -->
        <test-method status="PASS" signature="createTempDir()[pri:0, instance:main.java.compiler.test.CompilerTest@1810399e]" name="createTempDir" is-config="true" duration-ms="0" started-at="2016-04-05T10:18:30Z" finished-at="2016-04-05T10:18:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createTempDir -->
        <test-method status="PASS" signature="createTempDir()[pri:0, instance:main.java.compiler.test.CompilerTest@1810399e]" name="createTempDir" is-config="true" duration-ms="0" started-at="2016-04-05T10:18:30Z" finished-at="2016-04-05T10:18:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createTempDir -->
        <test-method status="PASS" signature="runningCode_outputsExpectedText(java.lang.String, java.lang.String)[pri:0, instance:main.java.compiler.test.CompilerTest@1810399e]" name="runningCode_outputsExpectedText" duration-ms="276" started-at="2016-04-05T10:18:30Z" data-provider="provide_code_expectedText" finished-at="2016-04-05T10:18:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[println(1+2);]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runningCode_outputsExpectedText -->
        <test-method status="PASS" signature="runningCode_outputsExpectedText(java.lang.String, java.lang.String)[pri:0, instance:main.java.compiler.test.CompilerTest@1810399e]" name="runningCode_outputsExpectedText" duration-ms="194" started-at="2016-04-05T10:18:31Z" data-provider="provide_code_expectedText" finished-at="2016-04-05T10:18:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[println(1+2+42);]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[45
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runningCode_outputsExpectedText -->
        <test-method status="PASS" signature="createTempDir()[pri:0, instance:main.java.compiler.test.CompilerTest@1810399e]" name="createTempDir" is-config="true" duration-ms="0" started-at="2016-04-05T10:18:31Z" finished-at="2016-04-05T10:18:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createTempDir -->
        <test-method status="PASS" signature="createTempDir()[pri:0, instance:main.java.compiler.test.CompilerTest@1810399e]" name="createTempDir" is-config="true" duration-ms="1" started-at="2016-04-05T10:18:31Z" finished-at="2016-04-05T10:18:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createTempDir -->
        <test-method status="PASS" signature="runningCode_outputsExpectedText(java.lang.String, java.lang.String)[pri:0, instance:main.java.compiler.test.CompilerTest@1810399e]" name="runningCode_outputsExpectedText" duration-ms="206" started-at="2016-04-05T10:18:31Z" data-provider="provide_code_expectedText" finished-at="2016-04-05T10:18:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[println(1); println(2);]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1
2
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runningCode_outputsExpectedText -->
        <test-method status="PASS" signature="createTempDir()[pri:0, instance:main.java.compiler.test.CompilerTest@1810399e]" name="createTempDir" is-config="true" duration-ms="2" started-at="2016-04-05T10:18:31Z" finished-at="2016-04-05T10:18:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createTempDir -->
        <test-method status="PASS" signature="runningCode_outputsExpectedText(java.lang.String, java.lang.String)[pri:0, instance:main.java.compiler.test.CompilerTest@1810399e]" name="runningCode_outputsExpectedText" duration-ms="184" started-at="2016-04-05T10:18:31Z" data-provider="provide_code_expectedText" finished-at="2016-04-05T10:18:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[println(3-2);]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runningCode_outputsExpectedText -->
        <test-method status="PASS" signature="createTempDir()[pri:0, instance:main.java.compiler.test.CompilerTest@1810399e]" name="createTempDir" is-config="true" duration-ms="0" started-at="2016-04-05T10:18:31Z" finished-at="2016-04-05T10:18:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createTempDir -->
        <test-method status="PASS" signature="runningCode_outputsExpectedText(java.lang.String, java.lang.String)[pri:0, instance:main.java.compiler.test.CompilerTest@1810399e]" name="runningCode_outputsExpectedText" duration-ms="188" started-at="2016-04-05T10:18:31Z" data-provider="provide_code_expectedText" finished-at="2016-04-05T10:18:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[println(2*3);]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runningCode_outputsExpectedText -->
        <test-method status="PASS" signature="runningCode_outputsExpectedText(java.lang.String, java.lang.String)[pri:0, instance:main.java.compiler.test.CompilerTest@1810399e]" name="runningCode_outputsExpectedText" duration-ms="208" started-at="2016-04-05T10:18:31Z" data-provider="provide_code_expectedText" finished-at="2016-04-05T10:18:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[println(6/2);]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runningCode_outputsExpectedText -->
        <test-method status="PASS" signature="createTempDir()[pri:0, instance:main.java.compiler.test.CompilerTest@1810399e]" name="createTempDir" is-config="true" duration-ms="0" started-at="2016-04-05T10:18:31Z" finished-at="2016-04-05T10:18:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createTempDir -->
        <test-method status="PASS" signature="createTempDir()[pri:0, instance:main.java.compiler.test.CompilerTest@1810399e]" name="createTempDir" is-config="true" duration-ms="0" started-at="2016-04-05T10:18:32Z" finished-at="2016-04-05T10:18:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createTempDir -->
        <test-method status="PASS" signature="runningCode_outputsExpectedText(java.lang.String, java.lang.String)[pri:0, instance:main.java.compiler.test.CompilerTest@1810399e]" name="runningCode_outputsExpectedText" duration-ms="165" started-at="2016-04-05T10:18:32Z" data-provider="provide_code_expectedText" finished-at="2016-04-05T10:18:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[println(7/2);]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runningCode_outputsExpectedText -->
        <test-method status="PASS" signature="createTempDir()[pri:0, instance:main.java.compiler.test.CompilerTest@1810399e]" name="createTempDir" is-config="true" duration-ms="1" started-at="2016-04-05T10:18:32Z" finished-at="2016-04-05T10:18:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createTempDir -->
        <test-method status="PASS" signature="runningCode_outputsExpectedText(java.lang.String, java.lang.String)[pri:0, instance:main.java.compiler.test.CompilerTest@1810399e]" name="runningCode_outputsExpectedText" duration-ms="158" started-at="2016-04-05T10:18:32Z" data-provider="provide_code_expectedText" finished-at="2016-04-05T10:18:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[println(8/2*4);]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runningCode_outputsExpectedText -->
        <test-method status="PASS" signature="createTempDir()[pri:0, instance:main.java.compiler.test.CompilerTest@1810399e]" name="createTempDir" is-config="true" duration-ms="1" started-at="2016-04-05T10:18:32Z" finished-at="2016-04-05T10:18:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createTempDir -->
        <test-method status="PASS" signature="runningCode_outputsExpectedText(java.lang.String, java.lang.String)[pri:0, instance:main.java.compiler.test.CompilerTest@1810399e]" name="runningCode_outputsExpectedText" duration-ms="165" started-at="2016-04-05T10:18:32Z" data-provider="provide_code_expectedText" finished-at="2016-04-05T10:18:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[println(2+3*3);]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runningCode_outputsExpectedText -->
        <test-method status="PASS" signature="createTempDir()[pri:0, instance:main.java.compiler.test.CompilerTest@1810399e]" name="createTempDir" is-config="true" duration-ms="1" started-at="2016-04-05T10:18:32Z" finished-at="2016-04-05T10:18:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createTempDir -->
        <test-method status="PASS" signature="runningCode_outputsExpectedText(java.lang.String, java.lang.String)[pri:0, instance:main.java.compiler.test.CompilerTest@1810399e]" name="runningCode_outputsExpectedText" duration-ms="160" started-at="2016-04-05T10:18:32Z" data-provider="provide_code_expectedText" finished-at="2016-04-05T10:18:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[println(9-2*3);]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runningCode_outputsExpectedText -->
        <test-method status="PASS" signature="createTempDir()[pri:0, instance:main.java.compiler.test.CompilerTest@1810399e]" name="createTempDir" is-config="true" duration-ms="1" started-at="2016-04-05T10:18:32Z" finished-at="2016-04-05T10:18:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createTempDir -->
        <test-method status="PASS" signature="runningCode_outputsExpectedText(java.lang.String, java.lang.String)[pri:0, instance:main.java.compiler.test.CompilerTest@1810399e]" name="runningCode_outputsExpectedText" duration-ms="158" started-at="2016-04-05T10:18:32Z" data-provider="provide_code_expectedText" finished-at="2016-04-05T10:18:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[println(8-2+5);]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runningCode_outputsExpectedText -->
        <test-method status="PASS" signature="runningCode_outputsExpectedText(java.lang.String, java.lang.String)[pri:0, instance:main.java.compiler.test.CompilerTest@1810399e]" name="runningCode_outputsExpectedText" duration-ms="157" started-at="2016-04-05T10:18:32Z" data-provider="provide_code_expectedText" finished-at="2016-04-05T10:18:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[int foo; foo = 42; println(foo);]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[42
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runningCode_outputsExpectedText -->
        <test-method status="PASS" signature="createTempDir()[pri:0, instance:main.java.compiler.test.CompilerTest@1810399e]" name="createTempDir" is-config="true" duration-ms="0" started-at="2016-04-05T10:18:32Z" finished-at="2016-04-05T10:18:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createTempDir -->
        <test-method status="PASS" signature="createTempDir()[pri:0, instance:main.java.compiler.test.CompilerTest@1810399e]" name="createTempDir" is-config="true" duration-ms="2" started-at="2016-04-05T10:18:33Z" finished-at="2016-04-05T10:18:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createTempDir -->
        <test-method status="PASS" signature="runningCode_outputsExpectedText(java.lang.String, java.lang.String)[pri:0, instance:main.java.compiler.test.CompilerTest@1810399e]" name="runningCode_outputsExpectedText" duration-ms="155" started-at="2016-04-05T10:18:33Z" data-provider="provide_code_expectedText" finished-at="2016-04-05T10:18:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[int foo; foo = 42; println(foo+2);]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[44
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runningCode_outputsExpectedText -->
        <test-method status="PASS" signature="createTempDir()[pri:0, instance:main.java.compiler.test.CompilerTest@1810399e]" name="createTempDir" is-config="true" duration-ms="1" started-at="2016-04-05T10:18:33Z" finished-at="2016-04-05T10:18:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createTempDir -->
        <test-method status="PASS" signature="runningCode_outputsExpectedText(java.lang.String, java.lang.String)[pri:0, instance:main.java.compiler.test.CompilerTest@1810399e]" name="runningCode_outputsExpectedText" duration-ms="154" started-at="2016-04-05T10:18:33Z" data-provider="provide_code_expectedText" finished-at="2016-04-05T10:18:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[int a; int b; a = 2; b = 5; println(a+b);]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runningCode_outputsExpectedText -->
        <test-method status="PASS" signature="runningCode_outputsExpectedText(java.lang.String, java.lang.String)[pri:0, instance:main.java.compiler.test.CompilerTest@1810399e]" name="runningCode_outputsExpectedText" duration-ms="161" started-at="2016-04-05T10:18:33Z" data-provider="provide_code_expectedText" finished-at="2016-04-05T10:18:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[int randomNumber() { return 4; } println(randomNumber());]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runningCode_outputsExpectedText -->
        <test-method status="PASS" signature="createTempDir()[pri:0, instance:main.java.compiler.test.CompilerTest@1810399e]" name="createTempDir" is-config="true" duration-ms="0" started-at="2016-04-05T10:18:33Z" finished-at="2016-04-05T10:18:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createTempDir -->
        <test-method status="PASS" signature="createTempDir()[pri:0, instance:main.java.compiler.test.CompilerTest@1810399e]" name="createTempDir" is-config="true" duration-ms="0" started-at="2016-04-05T10:18:33Z" finished-at="2016-04-05T10:18:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createTempDir -->
        <test-method status="PASS" signature="runningCode_outputsExpectedText(java.lang.String, java.lang.String)[pri:0, instance:main.java.compiler.test.CompilerTest@1810399e]" name="runningCode_outputsExpectedText" duration-ms="151" started-at="2016-04-05T10:18:33Z" data-provider="provide_code_expectedText" finished-at="2016-04-05T10:18:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[int randomNumber() {
  int i;
  i = 4;
  return i;
}
println(randomNumber());]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runningCode_outputsExpectedText -->
        <test-method status="PASS" signature="createTempDir()[pri:0, instance:main.java.compiler.test.CompilerTest@1810399e]" name="createTempDir" is-config="true" duration-ms="1" started-at="2016-04-05T10:18:33Z" finished-at="2016-04-05T10:18:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createTempDir -->
        <test-method status="PASS" signature="runningCode_outputsExpectedText(java.lang.String, java.lang.String)[pri:0, instance:main.java.compiler.test.CompilerTest@1810399e]" name="runningCode_outputsExpectedText" duration-ms="149" started-at="2016-04-05T10:18:33Z" data-provider="provide_code_expectedText" finished-at="2016-04-05T10:18:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[int randomNumber() {
  int i;
  i = 4;
  return i;
}
int i;
i = 42;
println(randomNumber());
println(i);]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4
42
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runningCode_outputsExpectedText -->
        <test-method status="PASS" signature="createTempDir()[pri:0, instance:main.java.compiler.test.CompilerTest@1810399e]" name="createTempDir" is-config="true" duration-ms="1" started-at="2016-04-05T10:18:33Z" finished-at="2016-04-05T10:18:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createTempDir -->
        <test-method status="PASS" signature="runningCode_outputsExpectedText(java.lang.String, java.lang.String)[pri:0, instance:main.java.compiler.test.CompilerTest@1810399e]" name="runningCode_outputsExpectedText" duration-ms="160" started-at="2016-04-05T10:18:33Z" data-provider="provide_code_expectedText" finished-at="2016-04-05T10:18:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[int add(int a, int b) {
  return a+b;
}
println(add(5,8));]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runningCode_outputsExpectedText -->
      </class> <!-- main.java.compiler.test.CompilerTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
